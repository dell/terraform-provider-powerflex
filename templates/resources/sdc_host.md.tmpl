---
# Copyright (c) 2023-2024 Dell Inc., or its subsidiaries. All Rights Reserved.
# 
# Licensed under the Mozilla Public License Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://mozilla.org/MPL/2.0/
# 
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

title: "{{.Name }} {{.Type | lower}}"
linkTitle: "{{.Name }}"
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Name }} ({{.Type}})

{{ .Description | trimspace }}

~> **Caution:** SDC Host creation is not atomic. This resource sets parameters like name, etc. after SDC installation is complete.
If that fails for any reason, Terraform, by default, will mark this resource as tainted and recreate it on the next apply. But 
these issues (caused by invalid inputs, network disruptions, etc.) do not require resource recreation (ie. SDC re-installation) to resolve. 
If one untaints this resource manually prior to applying again, this resource can start from where it left off and, if the cause of failure
has been rectified, it can take incremental actions to set the necessary SDC parameters.
So please untaint the resource before applying again if you want to prevent unnecessary SDC re-installations.

## Example Usage

### With ESXi

{{tffile "examples/resources/powerflex_sdc_host/resource_esxi.tf" }}

After the execution of above resource block, the ESXi host would have been added as an SDC to the PowerFlex array. For more information, please check the terraform state file.

### With Linux

{{tffile "examples/resources/powerflex_sdc_host/resource_linux.tf" }}

After the execution of above resource block, the Linux host would have been addes as an SDC to the PowerFlex array. For more information, please check the terraform state file.

### With Windows

{{tffile "examples/resources/powerflex_sdc_host/resource_windows.tf" }}

After the execution of above resource block, the Windows Server host would have been addes as an SDC to the PowerFlex array. For more information, please check the terraform state file.

{{ .SchemaMarkdown | trimspace }}

{{ if .HasImport -}}
## Import

Import is supported using the following syntax:

{{codefile "shell" .ImportFile }}

1. This will import the SDC instance with specified IP into your Terraform state.
2. After successful import, you can run terraform state list to ensure the resource has been imported successfully.
3. Now, you can fill in the resource block with the appropriate arguments and settings that match the imported resource's real-world configuration.
4. Execute terraform plan to see if your configuration and the imported resource are in sync. Make adjustments if needed.
5. Finally, execute terraform apply to bring the resource fully under Terraform's management.
6. Now, the resource which was not part of terraform became part of Terraform managed infrastructure.

{{- end }}